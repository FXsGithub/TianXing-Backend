# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "demo" ]
  pull_request:
    branches: [ "demo" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      - name: Generate random number with Python
        run: |
          echo "RANDOM_NUMBER=$(python -c 'import random; print(random.randint(0, 10000000))')" >> $GITHUB_ENV
          
        
      # Runs a set of commands using the runners shell
      - name: Deploy to Server
        env:
          SERVER_KEY: ${{ secrets.SERVER_KEY }}
        run: |
          echo "GITHUB_ENV:"
          echo $RANDOM_NUMBER
          echo "$SERVER_KEY" > deploy_key
          chmod 600 deploy_key
          ssh -o StrictHostKeyChecking=no -i deploy_key root@124.221.108.4 "cd /web && rm -rf TianXing-Backend || true"
          ssh -o StrictHostKeyChecking=no -i deploy_key root@124.221.108.4 "cd /web && git clone https://ghproxy.com/https://github.com/Ultrasty/TianXing-Backend/"
          ssh -o StrictHostKeyChecking=no -i deploy_key root@124.221.108.4 "cd /web && /usr/bin/tmux new-session -d -s $RANDOM_NUMBER 'bash -l -c ./build.sh'"
          
          rm -f deploy_key
